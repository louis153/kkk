<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/context
						http://www.springframework.org/schema/context/spring-context-3.2.xsd
						http://www.springframework.org/schema/aop
						http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
						http://www.springframework.org/schema/tx
						http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">

	<context:annotation-config />
	<context:component-scan base-package="com.longti.upjc.dao.impl,com.longti.upjc.service.impl,com.longti.upjc.strategy.impl" />

	<context:property-placeholder location="classpath*:*.properties" />

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${jdbc.driverClassName}"></property>
		<property name="url" value="${jdbc.url}"></property>
		<property name="username" value="${jdbc.username}"></property>
		<property name="password" value="${jdbc.password}"></property>
		<!-- mysql连接限制 -->
		<property name="maxActive" value="500"></property><!-- 最大活动链接 10个 -->
		<property name="maxIdle" value="100"></property><!-- 最大空闲连接 100个 -->
		<property name="maxWait" value="3600000"></property><!-- 最大等待时间 1小时 -->
		<!-- 以下，为了解决mysql8小时失去连接而配置 -->
		<property name="validationQuery" value="select 1"></property>
		<property name="testWhileIdle" value="true"></property>
		<property name="timeBetweenEvictionRunsMillis" value="3600000"></property><!-- 
			每1小时检测空闲连接超过5小时的连接 两个时间必须小于timeout的时间。 -->
		<property name="minEvictableIdleTimeMillis" value="18000000"></property>
		<property name="testOnBorrow" value="true"></property>
	</bean>

	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- dataSource属性指定要用到的连接池 -->
		<property name="dataSource" ref="dataSource" />
		<!-- configLocation属性指定mybatis的核心配置文件 -->
		<property name="configLocation" value="classpath:mybatis.xml" />
		<!-- <property name="mapperLocations" value="classpath*:com/mapping/**/*mapper.xml"></property> -->
	</bean>

	
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory"></constructor-arg>
		<constructor-arg index="1" value="BATCH" /> <!--如果想要进行批量操作可加入这个属性 -->
	</bean>

	<!-- 事务的传播特性 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="save*" propagation="REQUIRED" rollback-for="java.lang.Exception" />
			<tx:method name="edit*" propagation="REQUIRED" rollback-for="java.lang.Exception" />
			<tx:method name="add*" propagation="REQUIRED" rollback-for="java.lang.Exception" />
			<tx:method name="update*" propagation="REQUIRED" rollback-for="java.lang.Exception" />
			<tx:method name="insert*" propagation="REQUIRED" rollback-for="java.lang.Exception" />
			<tx:method name="del*" propagation="REQUIRED" rollback-for="java.lang.Exception" />
			<tx:method name="create*" propagation="REQUIRED" rollback-for="java.lang.Exception" />
			<tx:method name="*" read-only="true" />
		</tx:attributes>
	</tx:advice>

	<!-- 哪些类里面的哪些方法，参与配置的事务管理 -->
	<aop:config>				 
		<aop:pointcut expression="execution(* com.longti.upjc.service.impl.sporttery.*.*(..))"
			id="serviceMethod" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="serviceMethod" />
	</aop:config>

	
	
	

</beans>
